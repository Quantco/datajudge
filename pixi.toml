[project]
name = "datajudge"
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "win-64"]

[tasks]
postinstall = "pip install --no-build-isolation --no-deps --disable-pip-version-check -e ."

[dependencies]
python = ">=3.8"
scipy = "*"
sqlalchemy = ">=1.4,<3"
colorama = "*"
pytest = "*"

[feature.docs.dependencies]
make = "*"
numpydoc = "*"
sphinx = "*"
sphinx_rtd_theme = "*"
sphinxcontrib-apidoc = "*"
sphinx-autodoc-typehints = "*"
[feature.docs.tasks]
docs = "cd docs && make html "
readthedocs = "rm -rf $READTHEDOCS_OUTPUT/html && cp -r docs/build/html $READTHEDOCS_OUTPUT/html"

[feature.py38.dependencies]
python = "3.8.*"
[feature.py39.dependencies]
python = "3.9.*"
[feature.py310.dependencies]
python = "3.10.*"
[feature.py311.dependencies]
python = "3.11.*"
[feature.py312.dependencies]
python = "3.12.*"

[feature.unit.tasks]
test = "pytest tests/unit"
coverage = "pytest tests/unit --cov=datajudge --cov-report=xml --cov-append"

[feature.mssql.dependencies]
pyodbc = "*"
freetds = "*"
[feature.mssql.tasks]
test = "pytest tests/integration --backend=mssql"
test_freetds = "pytest tests/integration --backend=mssql-freetds"
coverage = "pytest tests/integration --cov=datajudge --cov-report=xml --cov-append --backend=mssql"

[feature.postgres.dependencies]
psycopg2 = "*"
[feature.postgres.tasks]
test = "pytest tests/integration --backend=postgres"
coverage = "pytest tests/integration --cov=datajudge --cov-report=xml --cov-append --backend=postgres"

[feature.db2.dependencies]
ibm_db = "*"
ibm_db_sa = "*"
[feature.db2.tasks]
test = "pytest tests/integration --backend=db2"
coverage = "pytest tests/integration --cov=datajudge --cov-report=xml --cov-append --backend=db2"

[feature.snowflake.dependencies]
snowflake-sqlalchemy = "*"
[feature.snowflake.tasks]
test = "pytest tests/integration --backend=snowflake"
coverage = "pytest tests/integration --cov=datajudge --cov-report=xml --cov-append --backend=snowflake"

[feature.bigquery.dependencies]
sqlalchemy-bigquery = "*"
[feature.bigquery.tasks]
test = "pytest tests/integration --backend=bigquery -v -n=16"
coverage = "pytest tests/integration --cov=datajudge --cov-report=xml --cov-append --backend=bigquery -v -n=16"

[feature.impala.dependencies]
impyla = "*"
[feature.impala.tasks]
test = "pytest tests/integration --backend=impala"
coverage = "pytest tests/integration --cov=datajudge --cov-report=xml --cov-append --backend=impala"

[feature.sa1.dependencies]
sqlalchemy = "1.*"

[feature.sa2.dependencies]
sqlalchemy = "2.*"

[feature.test.dependencies]
pytest-cov = "*"
pytest-xdist = "*"

[feature.mypy.dependencies]
mypy = "*"
types-setuptools = "*"
types-colorama = "*"
pandas-stubs = "*"
types-jinja2 = "*"

[feature.lint.dependencies]
pre-commit = "*"
black = "*"
flake8 = "*"
isort = "*"
taplo = "*"
typos = "*"
pyupgrade = "*"

[feature.lint.tasks]
pre-commit-install = "pre-commit install"
pre-commit-run = "pre-commit run -a"

[host-dependencies]
flit-core = "*"
flit = "*"

[environments]
default = ["test"]
docs = ["docs"]

py38 = ["test", "py38", "unit"]
py39 = ["test", "py39", "unit"]
py310 = ["test", "py310", "unit"]
py311 = ["test", "py311", "unit"]
py312 = ["test", "py312", "unit"]
sa1 = ["sa1", "test", "unit"]
sa2 = ["sa2", "test", "unit"]

mssql-py38 = ["mssql", "py38", "test"]
mssql-py39 = ["mssql", "py39", "test"]
mssql-py310 = ["mssql", "py310", "test"]
mssql-py311 = ["mssql", "py311", "test"]
mssql-py312 = ["mssql", "py312", "test"]
mssql-sa1 = ["mssql", "sa1", "test"]
mssql-sa2 = ["mssql", "sa2", "test"]

postgres-py38 = ["postgres", "py38", "test"]
postgres-py39 = ["postgres", "py39", "test"]
postgres-py310 = ["postgres", "py310", "test"]
postgres-py311 = ["postgres", "py311", "test"]
postgres-py312 = ["postgres", "py312", "test"]
postgres-sa1 = ["postgres", "sa1", "test"]
postgres-sa2 = ["postgres", "sa2", "test"]

db2-py38 = ["db2", "py38", "test"]
db2-py39 = ["db2", "py39", "test"]
db2-py310 = ["db2", "py310", "test"]
db2-sa1 = ["db2", "sa1", "test"]

snowflake-py38 = ["snowflake", "py38", "test"]
snowflake-sa1 = ["snowflake", "sa1", "test"]

bigquery-py38 = ["bigquery", "py38", "test"]
bigquery-sa1 = ["bigquery", "sa1", "test"]

# We specify sqlalchemy 1 due to this bug:
# https://github.com/cloudera/impyla/issues/512
impala-py38 = ["impala", "py38", "sa1", "test"]
impala-sa1 = ["impala", "sa1", "test"]

lint = { features = ["lint"], no-default-feature = true }

mypy = ["mypy"]
